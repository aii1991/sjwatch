<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.boiledcoffee.sjwatch.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.boiledcoffee.sjwatch.model.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="qq_token" property="qqToken" jdbcType="VARCHAR" />
    <result column="wechat_token" property="wechatToken" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="modify_time" property="modifyTime" jdbcType="BIGINT" />
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_name, nick_name, password, token, sex, age, qq_token, wechat_token, create_time, 
    modify_time, role_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.boiledcoffee.sjwatch.model.User" >
    insert into t_user (id, user_name, nick_name, 
      password, token, sex, 
      age, qq_token, wechat_token, 
      create_time, modify_time, role_id
      )
    values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{age,jdbcType=INTEGER}, #{qqToken,jdbcType=VARCHAR}, #{wechatToken,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=BIGINT}, #{modifyTime,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.boiledcoffee.sjwatch.model.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="qqToken != null" >
        qq_token,
      </if>
      <if test="wechatToken != null" >
        wechat_token,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="qqToken != null" >
        #{qqToken,jdbcType=VARCHAR},
      </if>
      <if test="wechatToken != null" >
        #{wechatToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.boiledcoffee.sjwatch.model.User" >
    update t_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="qqToken != null" >
        qq_token = #{qqToken,jdbcType=VARCHAR},
      </if>
      <if test="wechatToken != null" >
        wechat_token = #{wechatToken,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.boiledcoffee.sjwatch.model.User" >
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      qq_token = #{qqToken,jdbcType=VARCHAR},
      wechat_token = #{wechatToken,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=BIGINT},
      role_id = #{roleId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByUserName" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from t_user
    where user_name = #{userName,jdbcType=VARBINARY}
  </select>

</mapper>