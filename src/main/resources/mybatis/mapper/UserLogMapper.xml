<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.boiledcoffee.sjwatch.dao.UserLogMapper" >
  <resultMap id="BaseResultMap" type="com.boiledcoffee.sjwatch.model.entity.UserLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
    <result column="uid" property="uid" jdbcType="BIGINT" />
    <result column="request_url" property="requestUrl" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, login_ip, uid, request_url, create_time, modify_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from t_user_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_user_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.boiledcoffee.sjwatch.model.entity.UserLog" >
    insert into t_user_log (id, login_ip, uid,
    request_url, create_time, modify_time
    )
    values (#{id,jdbcType=BIGINT}, #{loginIp,jdbcType=VARCHAR}, #{uid,jdbcType=BIGINT},
    #{requestUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.boiledcoffee.sjwatch.model.entity.UserLog" >
    insert into t_user_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="loginIp != null" >
        login_ip,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="requestUrl != null" >
        request_url,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="loginIp != null" >
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="requestUrl != null" >
        #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.boiledcoffee.sjwatch.model.entity.UserLog" >
    update t_user_log
    <set >
      <if test="loginIp != null" >
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=BIGINT},
      </if>
      <if test="requestUrl != null" >
        request_url = #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.boiledcoffee.sjwatch.model.entity.UserLog" >
    update t_user_log
    set login_ip = #{loginIp,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=BIGINT},
      request_url = #{requestUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="findAllUserLog" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from t_user_log
  </select>


</mapper>